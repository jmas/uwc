{
  "front/index.js": {
    "id": "front/index.js",
    "type": "js",
    "mtime": 1414870883000,
    "src": "\"use strict\";\n\n\n// Shim\n\nif (typeof console === 'undefined') {\n  window.console = console = {\n    log: function() {},\n    error: function() {}\n  };\n}\n\n\n// Requires\n\nvar Router = require('component/router');\nvar Emitter = require('component/emitter');\n\nvar productsPageFn = require('./pages/products.js');\nvar productPageFn = require('./pages/product.js');\n\n\n// Local varibles\n\nvar pagesEl = document.getElementById('page-list');\nvar pagesEls = [];\nvar emitter = new Emitter;\nvar router = new Router;\n\n\n// Functions\n\nfunction addPage(name, bootstrapFn) {\n  var el = document.createElement('DIV');\n  el.setAttribute('class', 'page-item');\n  if (typeof bootstrapFn === 'function') {\n    bootstrapFn(el, emitter);\n  }\n  pagesEl.appendChild(el);\n  pagesEls.push({\n    name: name,\n    el: el\n  });\n}\n\nfunction activatePage(name) {\n  if (typeof pagesEls[name] === 'undefined') {\n    return;\n  }\n\n  for (var item,i=0,len=pagesEls.length; i<len; i++) {\n    item = pagesEls[i];\n\n    if (item.name === name) {\n      pagesEls[i].el.classList.add('active');\n    } else {\n      pagesEls[i].el.classList.remove('active');\n    }\n  }\n\n  emitter.emit('page.activated', name);\n}\n\nfunction registerRouting() {\n  router.get('/', function() {\n      activatePage('products');\n      emitter.emit('page.activated.products');\n    });\n\n  router.get('/product/:id', function(id) {\n      activatePage('product');\n      emitter.emit('page.activated.product', id);\n    });\n\n  document.getElementsByTagName('BODY')[0].addEventListener('click', function(event) {\n    var route = event.target.getAttribute('data-route');\n\n    if (route !== null) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      router.dispatch(route);\n    }\n  }, false);\n}\n\nfunction dispatchRouting() {\n  var loc = location.hash.substring(1);\n\n  if (! loc) {\n    loc = '/';\n  }\n  \n  console.log('dispatch location: ' + loc);\n  \n  router.dispatch(loc);\n}\n\n\n// Bootstrap\n\naddPage('products', productsPageFn);\naddPage('product', productPageFn);\n\nregisterRouting();\ndispatchRouting();",
    "deps": {
      "component/router": "components/component-router@0.0.1/index.js",
      "component/emitter": "components/component-emitter@1.1.3/index.js",
      "./pages/products.js": "front/pages/products.js",
      "./pages/product.js": "front/pages/product.js"
    },
    "entry": true
  },
  "components/component-emitter@1.1.3/index.js": {
    "id": "components/component-emitter@1.1.3/index.js",
    "type": "js",
    "mtime": 1403245556000,
    "src": "\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n",
    "deps": {}
  },
  "front/pages/products.js": {
    "id": "front/pages/products.js",
    "type": "js",
    "mtime": 1414869800000,
    "src": "\"use strict\";\n\nmodule.exports = function(rootEl, emitter) {\n\tconsole.log('products bootstrap.');\n\n\temitter.on('page.activated.products', function(name) {\n\t\tconsole.log('activated products page');\n\t});\n};",
    "deps": {}
  },
  "front/pages/product.js": {
    "id": "front/pages/product.js",
    "type": "js",
    "mtime": 1414870891000,
    "src": "\"use strict\";\n\nmodule.exports = function(rootEl, emitter) {\n\tconsole.log('product bootstrap.');\n\t\n\temitter.on('page.activated.product', function(id) {\n\t\tconsole.log('activated product page with id #' + id);\n\t});\n};",
    "deps": {}
  },
  "components/component-router@0.0.1/index.js": {
    "id": "components/component-router@0.0.1/index.js",
    "type": "js",
    "mtime": 1363460721000,
    "src": "\n/**\n * Module dependencies.\n */\n\ntry {\n  var Route = require('route-component');\n} catch (err) {\n  var Route = require('route');\n}\n\n/**\n * Expose `Router`.\n */\n\nmodule.exports = Router;\n\n/**\n * Initialize a new Router.\n *\n * @api public\n */\n\nfunction Router() {\n  this.routes = [];\n}\n\n/**\n * Create route `path` with optional `before`\n * and `after` callbacks. If you omit these\n * they may be added later with the `Route` returned.\n *\n *   router.get('/user/:id', showUser, hideUser);\n *\n *   router.get('/user/:id')\n *     .before(showUser)\n *     .after(hideUser)\n *\n * @param {String} path\n * @param {Function} before\n * @param {Function} after\n * @return {Route}\n * @api public\n */\n\nRouter.prototype.get = function(path, before, after){\n  var route = new Route(path);\n  this.routes.push(route);\n  if (before) route.before(before);\n  if (after) route.after(after);\n  return route;\n};\n\n/**\n * Dispatch the given `path`, matching routes\n * sequentially.\n *\n * @param {String} path\n * @api public\n */\n\nRouter.prototype.dispatch = function(path){\n  var ret;\n  this.teardown();\n  for (var i = 0; i < this.routes.length; i++) {\n    var route = this.routes[i];\n    if (ret = route.match(path)) {\n      this.route = route;\n      this.args = ret.args;\n      route.call('before', ret.args);\n      break;\n    }\n  }\n};\n\n/**\n * Invoke teardown callbacks of previous route.\n *\n * @api private\n */\n\nRouter.prototype.teardown = function(){\n  var route = this.route;\n  if (!route) return;\n  route.call('after', this.args);\n};\n",
    "deps": {
      "route": "components/component-route@0.2.0/index.js"
    }
  },
  "components/component-route@0.2.0/index.js": {
    "id": "components/component-route@0.2.0/index.js",
    "type": "js",
    "mtime": 1363459318000,
    "src": "\n/**\n * Module dependencies.\n */\n\nvar toRegexp = require('path-to-regexp');\n\n/**\n * Expose `Route`.\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize a route with the given `path`.\n *\n * @param {String|Regexp} path\n * @return {Type}\n * @api public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.keys = [];\n  this.regexp = toRegexp(path, this.keys);\n  this._before = [];\n  this._after = [];\n}\n\n/**\n * Add before `fn`.\n *\n * @param {Function} fn\n * @return {Route} self\n * @api public\n */\n\nRoute.prototype.before = function(fn){\n  this._before.push(fn);\n  return this;\n};\n\n/**\n * Add after `fn`.\n *\n * @param {Function} fn\n * @return {Route} self\n * @api public\n */\n\nRoute.prototype.after = function(fn){\n  this._after.push(fn);\n  return this;\n};\n\n/**\n * Invoke callbacks for `type` with `args`.\n *\n * @param {String} type\n * @param {Array} args\n * @api public\n */\n\nRoute.prototype.call = function(type, args){\n  args = args || [];\n  var fns = this['_' + type];\n  if (!fns) throw new Error('invalid type');\n  for (var i = 0; i < fns.length; i++) {\n    fns[i].apply(null, args);\n  }\n};\n\n/**\n * Check if `path` matches this route,\n * returning `false` or an object.\n *\n * @param {String} path\n * @return {Object}\n * @api public\n */\n\nRoute.prototype.match = function(path){\n  var keys = this.keys;\n  var qsIndex = path.indexOf('?');\n  var pathname = ~qsIndex ? path.slice(0, qsIndex) : path;\n  var m = this.regexp.exec(pathname);\n  var params = [];\n  var args = [];\n\n  if (!m) return false;\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = keys[i - 1];\n\n    var val = 'string' == typeof m[i]\n      ? decodeURIComponent(m[i])\n      : m[i];\n\n    if (key) {\n      params[key.name] = undefined !== params[key.name]\n        ? params[key.name]\n        : val;\n    } else {\n      params.push(val);\n    }\n\n    args.push(val);\n  }\n\n  params.args = args;\n  return params;\n};\n",
    "deps": {
      "path-to-regexp": "components/component-path-to-regexp@v1.0.1/index.js"
    }
  },
  "components/component-path-to-regexp@v1.0.1/index.js": {
    "id": "components/component-path-to-regexp@v1.0.1/index.js",
    "type": "js",
    "mtime": 1409306178000,
    "src": "/**\n * Expose `pathtoRegexp`.\n */\nmodule.exports = pathtoRegexp;\nconsole.log(\"DEPRECATED use https://github.com/pillarjs/path-to-regexp\");\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match already escaped characters that would otherwise incorrectly appear\n  // in future matches. This allows the user to escape special characters that\n  // shouldn't be transformed.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\"]\n  // \"/route(\\\\d+)\" => [undefined, undefined, undefined, \"\\d+\", undefined]\n  '([\\\\/.])?(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^)])*)\\\\))?|\\\\(((?:\\\\\\\\.|[^)])*)\\\\))([+*?])?',\n  // Match regexp special characters that should always be escaped.\n  '([.+*?=^!:${}()[\\\\]|\\\\/])'\n].join('|'), 'g');\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {String} group\n * @return {String}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1');\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {RegExp} re\n * @param  {Array}  keys\n * @return {RegExp}\n */\nvar attachKeys = function (re, keys) {\n  re.keys = keys;\n\n  return re;\n};\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array should be passed in, which will contain the placeholder key\n * names. For example `/user/:id` will then contain `[\"id\"]`.\n *\n * @param  {(String|RegExp|Array)} path\n * @param  {Array}                 keys\n * @param  {Object}                options\n * @return {RegExp}\n */\nfunction pathtoRegexp (path, keys, options) {\n  if (keys && !Array.isArray(keys)) {\n    options = keys;\n    keys = null;\n  }\n\n  keys = keys || [];\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var flags = options.sensitive ? '' : 'i';\n  var index = 0;\n\n  if (path instanceof RegExp) {\n    // Match all capturing groups of a regexp.\n    var groups = path.source.match(/\\((?!\\?)/g) || [];\n\n    // Map all the matches to their numeric keys and push into the keys.\n    keys.push.apply(keys, groups.map(function (match, index) {\n      return {\n        name:      index,\n        delimiter: null,\n        optional:  false,\n        repeat:    false\n      };\n    }));\n\n    // Return the source back to the user.\n    return attachKeys(path, keys);\n  }\n\n  if (Array.isArray(path)) {\n    // Map array parts into regexps and return their source. We also pass\n    // the same keys and options instance into every generation to get\n    // consistent matching groups before we join the sources together.\n    path = path.map(function (value) {\n      return pathtoRegexp(value, keys, options).source;\n    });\n\n    // Generate a new regexp instance by joining all the parts together.\n    return attachKeys(new RegExp('(?:' + path.join('|') + ')', flags), keys);\n  }\n\n  // Alter the path string into a usable regexp.\n  path = path.replace(PATH_REGEXP, function (match, escaped, prefix, key, capture, group, suffix, escape) {\n    // Avoiding re-escaping escaped characters.\n    if (escaped) {\n      return escaped;\n    }\n\n    // Escape regexp special characters.\n    if (escape) {\n      return '\\\\' + escape;\n    }\n\n    var repeat   = suffix === '+' || suffix === '*';\n    var optional = suffix === '?' || suffix === '*';\n\n    keys.push({\n      name:      key || index++,\n      delimiter: prefix || '/',\n      optional:  optional,\n      repeat:    repeat\n    });\n\n    // Escape the prefix character.\n    prefix = prefix ? '\\\\' + prefix : '';\n\n    // Match using the custom capturing group, or fallback to capturing\n    // everything up to the next slash (or next period if the param was\n    // prefixed with a period).\n    capture = escapeGroup(capture || group || '[^' + (prefix || '\\\\/') + ']+?');\n\n    // Allow parameters to be repeated more than once.\n    if (repeat) {\n      capture = capture + '(?:' + prefix + capture + ')*';\n    }\n\n    // Allow a parameter to be optional.\n    if (optional) {\n      return '(?:' + prefix + '(' + capture + '))?';\n    }\n\n    // Basic parameter support.\n    return prefix + '(' + capture + ')';\n  });\n\n  // Check whether the path ends in a slash as it alters some match behaviour.\n  var endsWithSlash = path[path.length - 1] === '/';\n\n  // In non-strict mode we allow an optional trailing slash in the match. If\n  // the path to match already ended with a slash, we need to remove it for\n  // consistency. The slash is only valid at the very end of a path match, not\n  // anywhere in the middle. This is important for non-ending mode, otherwise\n  // \"/test/\" will match \"/test//route\".\n  if (!strict) {\n    path = (endsWithSlash ? path.slice(0, -2) : path) + '(?:\\\\/(?=$))?';\n  }\n\n  // In non-ending mode, we need prompt the capturing groups to match as much\n  // as possible by using a positive lookahead for the end or next path segment.\n  if (!end) {\n    path += strict && endsWithSlash ? '' : '(?=\\\\/|$)';\n  }\n\n  return attachKeys(new RegExp('^' + path + (end ? '$' : ''), flags), keys);\n};\n",
    "deps": {}
  },
  "front/styles.css": {
    "id": "front/styles.css",
    "type": "css",
    "mtime": 1414868417000,
    "src": "* {\n\tpadding: 0;\n\tmargin: 0;\n}\n\nhtml, body {\n\tposition: relative;\n\theight: 100%;\n}\n\nbody {\n\tfont-family: sans-serif;\n\tbackground-color: #fff;\n\tcolor: #000;\n}\n\nimg {\n\tborder: none;\n\tdisplay: inline-block;\n}\n\na {\n\ttext-decoration: none;\n\tcolor: #045FB4;\n}\n\na:hover {\n\tcolor: #FF4000;\n}\n\np {\n\tline-height: 1.3em;\n}\n\ninput {\n\tborder: 1px solid #58ACFA;\n\tpadding: .3em;\n}\n\nh3 {\n\tborder-bottom: 1px solid #eee;\n\tline-height: 50px;\n\tcolor: #666;\n\tfont-weight: normal;\n\tmargin-bottom: 25px;\n}\n\n.empty {\n\ttext-align: center;\n\tcolor: #666;\n\tline-height: 1.3em;\n}\n\n.action-btn {\n\tdisplay: inline-block;\n\tborder: 1px solid #eee;\n\tpadding: .25em 1em;\n\tborder-radius: 1em;\n}\n\n.action-btn:hover,\n.action-btn:focus {\n\toutline: none;\n\tbackground-color: rgba(200, 200, 200, .1);\n}\n\n.action-btn.accept {\n\tborder-color: green;\n\tcolor: green;\n}\n\n.action-btn.remove {\n\tborder-color: orange;\n\tcolor: orange;\n}\n\n.product-list {\n\toverflow: hidden;\n}\n\n.product-item {\n\tdisplay: block;\n\tbackground-color: #fafafa;\n\tpadding: 15px;\n\tborder: 1px solid #eee;\n\toverflow: hidden;\n}\n\n.product-image {\n\tposition: relative;\n\tdisplay: block;\n\toverflow: hidden;\n\theight: 180px;\n\ttext-align: center;\n\tmargin: -15px -15px 15px -15px;\n\tbackground-color: #F2F2F2;\n}\n\n.product-image img {\n\tmin-height: 100%;\n\tmin-width: 100%;\n}\n\n.product-image .amount {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 0;\n\twidth: 100%;\n\theight: 50px;\n\tline-height: 50px;\n\tfont-size: 2.5em;\n\tcolor: #fff;\n\tmargin-top: -25px;\n\ttext-shadow: 0 0 3px #000;\n}\n\n.product-summary {\n\tposition: relative;\n\toverflow: hidden;\n}\n\n.product-summary .name {\n\twidth: 100%;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\tdisplay: block;\n\tfont-size: 1em;\n\tmargin-bottom: .3em;\n}\n\n.product-summary .price {\n\tfont-size: .9em;\n\tfont-weight: bold;\n\tcolor: green;\n\tmargin-bottom: .8em;\n}\n\n.product-summary .amount {\n\tmargin-bottom: 1em;\n}\n\n.product-summary .amount input {\n\twidth: 3em;\n\ttext-align: center;\n\tfont-size: 1.2em;\n}\n\n.page-item {\n\tdisplay: none;\n}\n\n.page-item.active {\n\tdisplay: block;\n}\n\n\n\n#app {\n\tmax-width: 1650px;\n\tmargin: 0 auto;\n}\n\n#aside-content {\n\tposition: relative;\n\tfloat: right;\n\twidth: 350px;\n\tpadding: 25px;\n\tmargin: 25px 25px 0 0;\n\toverflow: hidden;\n\tbackground-color: #fff;\n\tborder: 1px solid #eee;\n}\n\n#aside-title {\n\tpadding: 15px;\n\tborder-bottom: 1px solid #eee;\n\tbackground-color: #fafafa;\n\tmargin: -25px -25px 25px -25px;\n\ttext-align: center;\n\tfont-weight: bold;\n\tcolor: #666;\n}\n\n#main-content {\n\toverflow: hidden;\n\tpadding: 25px;\n}\n\n#cart-product-list .product-item {\n\tmargin-bottom: 25px;\n}\n\n#cart-product-list .product-image {\n\tmargin: -15px 15px -15px -15px;\n\tfloat: left;\n\twidth: 120px;\n\theight: 120px;\n}\n\n#cart-checkout {\n\ttext-align: center;\n\tfont-weight: bold;\n\tdisplay: none;\n}\n\n#cart-checkout.active {\n\tdisplay: block;\n}\n\n#product-view {\n\tdisplay: block;\n\tbackground-color: #fafafa;\n\tpadding: 15px;\n\tborder: 1px solid #eee;\n\toverflow: hidden;\n\tfont-size: 1.2em;\n\tmargin-bottom: 25px;\n}\n\n#product-view .product-image {\n\twidth: 200px;\n\theight: 200px;\n\tfloat: left;\n\tmargin: -15px 15px -15px -15px;\n}\n\n#product-view-back {\n\ttext-align: center;\n\tfont-size: 1.2em;\n\tmargin-bottom: 25px;\n}\n\n#main-product-list .product-item {\n\twidth: 230px;\n\tfloat: left;\n\tmargin: 0 25px 25px 0;\n}\n\n#product-view-more {\n\tmargin-bottom: 25px;\n}",
    "deps": {},
    "entry": true
  }
}